{"version":3,"sources":["components/Login/Login.jsx"],"names":["Input","Element","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","createField","required","type","className","styles","formSummaryError","color","connect","state","isAuth","auth","login","props","to","formData","email","password","rememberMe"],"mappings":"wHAAA,kHAUMA,EAAQC,YAAQ,SAwChBC,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAtCP,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAC3B,OACM,kBAAC,IAAD,CAAMC,SAAUF,GACV,kBAAC,IAAKG,MAAN,KACM,wCACCC,YAAY,QAAS,QAAS,CAACC,KAAWV,IAEjD,kBAAC,IAAKQ,MAAN,KACM,2CACCC,YAAY,WAAY,WAAY,CAACC,KAAWV,EAAO,CAAEW,KAAM,cAErEL,GAAS,yBAAKM,UAAWC,IAAOC,kBAC1BR,GAGP,kBAAC,IAAD,CAAQK,KAAK,SAASI,MAAM,QAA5B,aA6BHC,uBAJS,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,UAGe,CAAEE,WAA3BJ,EAvBH,SAACK,GAKP,OAAIA,EAAMH,OAEE,kBAAC,IAAD,CAAUI,GAAG,aAGZ,yBAAKV,UAAU,kBAChB,qCACA,kBAACV,EAAD,CAAgBK,SAXX,SAACgB,GACZF,EAAMD,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/8.0cf022c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { required } from '../../utils/validators';\r\nimport { Element, createField } from '../common/FormsControls/FormsControls';\r\nimport { connect } from 'react-redux';\r\nimport { login } from './../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from './../common/FormsControls/FormsControls.module.css';\r\nimport { Button, Form } from 'semantic-ui-react'\r\n\r\nconst Input = Element('input');\r\n\r\nlet LoginForm = ({ handleSubmit, error }) => {\r\n      return (\r\n            <Form onSubmit={handleSubmit}>\r\n                  <Form.Field>\r\n                        <label>Login</label>\r\n                        {createField('Email', 'email', [required], Input)}\r\n                  </Form.Field>\r\n                  <Form.Field >\r\n                        <label>Password</label>\r\n                        {createField('Password', 'password', [required], Input, { type: 'password' })}\r\n                  </Form.Field>\r\n                  {error && <div className={styles.formSummaryError}>\r\n                        {error}\r\n                  </div>\r\n                  }\r\n                  <Button type=\"submit\" color='blue'>Login</Button>\r\n\r\n            </Form >\r\n      )\r\n};\r\n\r\nlet Login = (props) => {\r\n      const onSubmit = (formData) => {\r\n            props.login(formData.email, formData.password, formData.rememberMe)\r\n      }\r\n\r\n      if (props.isAuth) {\r\n            return (\r\n                  <Redirect to='/profile' />\r\n            )\r\n      } else {\r\n            return <div className=\"form-container\">\r\n                  <h1>Login</h1>\r\n                  <LoginReduxForm onSubmit={onSubmit} />\r\n            </div>\r\n      }\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n      isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login); "],"sourceRoot":""}