{"version":3,"sources":["redux/app-reducer.js","utils/validators.js","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.module.css","components/Profile/MyPost/MyPosts.module.css","components/common/FormsControls/FormsControls.js","redux/dialogs-reducer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/Profileinfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPosts.jsx","components/Profile/MyPost/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","utils/object-helpers.js","redux/users-reducer.js","components/Profile/ProfileInfo/Profileinfo.module.css","components/Profile/MyPost/Post/Post.module.css","api/api.js","serviceWorker.js","redux/redux-store.js","index.js","redux/profile-reducer.js","redux/auth-reducer.js","components/common/Preloader/Preloader.jsx"],"names":["initialState","initialized","initializeApp","dispatch","a","async","promise","getAuthUserData","Promise","all","type","appReducer","state","action","required","value","maxLengthCreator","maxLength","length","module","exports","Element","input","meta","touched","error","props","hasError","className","styles","formControl","createField","placeholder","name","validators","component","validate","dialogs","id","messages","message","sendMessageCreator","newMessageBody","dialogsReducer","body","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","s","descriptionBlock","src","photos","large","Preloader","Post","item","alt","massage","likesCont","maxLength10","Textarea","MyPosts","React","memo","postsElements","posts","map","post","likesCount","key","reverse","postsBlock","AddNewPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","Button","color","MyPostsContainer","connect","profilePage","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter","MenuHeader","activeItem","handleItemClick","setState","Menu","pointing","secondary","size","Item","active","onClick","as","NavLink","to","position","logout","HeaderContainer","login","email","DialogsContainer","lazy","Login","UsersContainer","App","fallback","path","render","app","updateObjectInArray","items","objPropName","itemId","newObjProps","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","usersAPI","getUsers","data","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","userReducer","followed","filter","instance","axios","create","withCredentials","baseURL","headers","get","then","response","delete","getProfile","console","warn","profileAPI","put","authAPI","me","password","rememberMe","Boolean","window","location","hostname","reducers","combineReducers","profileReducer","dialogsPage","usersPage","setAuthUserData","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","newPost","postId","SET_USER_DATA","payload","stopSubmit","_error","authReducer","preloader","spinner"],"mappings":"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","file":"static/js/main.0ba43846.chunk.js","sourcesContent":["import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    await Promise.all([promise]);\r\n    dispatch(initializedSuccess());\r\n};\r\n\r\n\r\nexport default appReducer;","import React from 'react';\r\n\r\nexport const required = value => {\r\n      if (value) {\r\n            return undefined\r\n      } else {\r\n            return 'Field is required'\r\n      }\r\n};\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n      if (value.length > maxLength) {\r\n            return `Max length is ${maxLength} symbols`\r\n      } else {\r\n            return undefined\r\n      }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__KoJWe\",\"error\":\"FormsControls_error__1mA74\",\"formSummaryError\":\"FormsControls_formSummaryError__3sDnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2DPbf\",\"spinner\":\"Preloader_spinner__1h1Va\",\"spin\":\"Preloader_spin__12HVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3cQ6e\",\"posts\":\"MyPosts_posts__1lAYa\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nexport const Element = Element => ({ input, meta: { touched, error }, ...props }) => {\r\n      const hasError = touched && error;\r\n      return (\r\n            <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n                  <Element {...input} {...props} />\r\n                  {hasError && <span> {error} </span>}\r\n            </div>\r\n      );\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props) => (\r\n      <div>\r\n            <Field placeholder={placeholder}\r\n                  name={name}\r\n                  validate={validators}\r\n                  component={component}\r\n                  {...props} />\r\n      </div>\r\n\r\n);","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Andrey' },\r\n        { id: 2, name: 'Kolya' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How are u' },\r\n        { id: 3, message: 'Smile' },\r\n        { id: 4, message: 'Lol' }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 5, message: body }]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\r\n\r\nexport default dialogsReducer;","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n      let [editMode, setEditMode] = useState(false);\r\n      let [status, setStatus] = useState(props.status);\r\n\r\n      useEffect(() => {\r\n            setStatus(props.status)\r\n      }, [props.status]);\r\n\r\n      const activateEditMode = () => {\r\n            setEditMode(true)\r\n      };\r\n\r\n      const deactivateEditMode = () => {\r\n            setEditMode(false)\r\n            props.updateStatus(status);\r\n      };\r\n\r\n      const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value)\r\n      };\r\n\r\n      return (\r\n            <div>\r\n                  {!editMode &&\r\n                        <div>\r\n                              <span onDoubleClick={activateEditMode}> {props.status || \"No status\"} </span>\r\n                        </div>\r\n                  }\r\n                  {editMode &&\r\n                        <div>\r\n                              <input autoFocus={true}\r\n                                    onBlur={deactivateEditMode}\r\n                                    onChange={onStatusChange}\r\n                                    value={status} />\r\n                        </div>\r\n                  }\r\n            </div>\r\n      )\r\n};\r\n\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './Profileinfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <h3>Profile Status</h3>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return <div className={s.item}>\r\n        <img src=\"https://pbs.twimg.com/profile_images/1210987730299166721/jSUc6abq_400x400.jpg\" alt=\"ava\"></img>\r\n        {props.massage}\r\n        <div>\r\n            <span>Like</span> {props.likesCont}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post; ","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators';\r\nimport { Element } from '../../common/FormsControls/FormsControls';\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst Textarea = Element('textarea')\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(post => <Post massage={post.message} likesCont={post.likesCount} key={post.id} />).reverse();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n            <AddNewPostReduxForm onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div >\r\n    )\r\n});\r\n\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} placeholder='Post message' name='newPostText' validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <Button color='blue' type='submit'>Add Post </Button >\r\n            </div>\r\n        </form >\r\n    )\r\n};\r\n\r\nconst AddNewPostReduxForm = reduxForm({ form: 'profileAddNewPostForm' })(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/Profileinfo';\r\nimport MyPostsContainer from './MyPost/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className='ui-container'>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '././../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            < Profile {...this.props} />)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default class MenuHeader extends Component {\r\n    state = {\r\n        activeItem: 'home'\r\n    }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n    render() {\r\n        const { activeItem } = this.state\r\n        return (\r\n            <Menu pointing secondary size=\"massive\" color=\"teal\" >\r\n                <Menu.Item\r\n                    name='Profile'\r\n                    active={activeItem === 'profile'}\r\n                    onClick={this.handleItemClick}\r\n                    as={NavLink}\r\n                    to='/profile'\r\n                />\r\n                <Menu.Item\r\n                    name='Messages'\r\n                    active={activeItem === 'dialogs'}\r\n                    onClick={this.handleItemClick}\r\n                    as={NavLink}\r\n                    to='/dialogs'\r\n                />\r\n                <Menu.Item\r\n                    name='Users'\r\n                    active={activeItem === 'users'}\r\n                    onClick={this.handleItemClick}\r\n                    as={NavLink}\r\n                    to='/users'\r\n                />\r\n                {this.props.isAuth\r\n                    ? < Menu.Menu position='right'>\r\n                        <Menu.Item\r\n                            name='logout'\r\n                            active={activeItem === 'logout'}\r\n                            onClick={this.props.logout}\r\n                        />\r\n                    </Menu.Menu>\r\n                    : < Menu.Menu position='right'>\r\n                        <Menu.Item\r\n                            name='Login'\r\n                            active={activeItem === 'logout'}\r\n                            onClick={this.handleItemClick}\r\n                            as={NavLink}\r\n                            to='/login'\r\n                        />\r\n                    </Menu.Menu>\r\n                }\r\n            </Menu>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    email: state.auth.email\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React, { Component, Suspense } from 'react';\nimport './App.css'\nimport { Route, withRouter } from 'react-router-dom';\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { initializeApp } from './redux/app-reducer'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport 'semantic-ui-css/semantic.min.css'\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst Login = React.lazy(() => import('./components/Login/Login'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    } return (\n      <div className=\"app-wrapper\" >\n        <HeaderContainer />\n        <div className=\"app-wrapper-content\">\n          <Suspense fallback={<Preloader />}>\n            <Route path='/dialogs' render={() => <DialogsContainer />} />\n            <Route path='/login' render={() => <Login />} />\n            <Route path='/users' render={() => <UsersContainer />} />\n          </Suspense>\n          <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }))(App);","export const updateObjectInArray = (items, objPropName, itemId, newObjProps) => {\r\n\r\n      return items.map(u => {\r\n            if (u[objPropName] === itemId) {\r\n                  return { ...u, ...newObjProps }\r\n            }\r\n            return u;\r\n      })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, 'id', action.userId, { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, 'id', action.userId, { followed: false })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    const data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n\r\n    const response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n};\r\n\r\nexport default userReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"Profileinfo_descriptionBlock__1Yly_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1vZkF\"};","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n      withCredentials: true,\r\n      baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n      headers: { \"API-KEY\": \"877ec7b8-009a-44b1-9f94-b4b8ea47f202\" },\r\n})\r\n\r\nexport const usersAPI = {\r\n      getUsers(currentPage, pageSize) {\r\n            return instance.get(`users?page=${currentPage}&count=${pageSize}`, {\r\n            }).then(response => {\r\n                  return response.data;\r\n            });\r\n      },\r\n      follow(userId) {\r\n            return instance.post(`follow/${userId}`)\r\n      },\r\n      unfollow(userId) {\r\n            return instance.delete(`follow/${userId}`)\r\n      },\r\n      getProfile(userId) {\r\n            console.warn('Obsolete method. Please use profileAPI object.')\r\n            return profileAPI.getProfile(userId)\r\n      }\r\n};\r\n\r\nexport const profileAPI = {\r\n      getProfile(userId) {\r\n            return instance.get(`profile/${userId}`)\r\n      },\r\n      getStatus(userId) {\r\n            return instance.get(`profile/status/${userId}`)\r\n      },\r\n      updateStatus(status) {\r\n            return instance.put(`profile/status`, {\r\n                  status: status\r\n            })\r\n      }\r\n};\r\n\r\nexport const authAPI = {\r\n      me() {\r\n            return instance.get(`auth/me`);\r\n      },\r\n      login(email, password, rememberMe = false) {\r\n            return instance.post(`auth/login`, { email, password, rememberMe });\r\n      },\r\n      logout() {\r\n            return instance.delete(`auth/login`);\r\n      }\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer'\r\nimport userReducer from \"./users-reducer\";\r\nimport setAuthUserData from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: userReducer,\r\n    auth: setAuthUserData,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import { usersAPI, profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, how are you', likesCount: 12 },\r\n        { id: 2, message: 'Hi guys, it\\'s my first post', likesCount: 34 },\r\n        { id: 3, message: 'I love this year 2019', likesCount: 3 },\r\n        { id: 4, message: 'Post Malone best writer', likesCount: 123 }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\r\n\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n});\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        // stopSubmit (redux-form)\r\n        let messages = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', { _error: messages }));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport s from './Preloader.module.css'\r\n\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={s.preloader}>\r\n        <div className={s.spinner}></div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;"],"sourceRoot":""}