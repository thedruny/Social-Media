{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsUserItem/DialogsUserItem.jsx","components/Dialogs/Message/DialogsMessage.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsUserItem","props","List","selection","verticalAlign","Item","as","NavLink","to","id","Image","avatar","src","Content","Header","name","DialogsMessage","Message","content","message","maxLength50","maxLengthCreator","Textarea","Element","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","className","s","addMessageItem","Field","component","placeholder","validate","required","Button","variant","type","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","reverse","messagesElements","messages","m","dialogsItems","massages","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,iBAAiB,gCAAgC,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,eAAiB,kC,iHCqBxLC,EAlBS,SAACC,GAErB,OACI,6BACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,cAAc,UAC1B,kBAACF,EAAA,EAAKG,KAAN,CACIC,GAAIC,IACJC,GAAI,YAAcP,EAAMQ,IACxB,kBAACC,EAAA,EAAD,CAAOC,QAAM,EAACC,IAAI,oEAClB,kBAACV,EAAA,EAAKW,QAAN,KACI,kBAACX,EAAA,EAAKY,OAAN,KAAcb,EAAMc,W,SCL7BC,EANQ,SAACf,GACpB,OACI,kBAACgB,EAAA,EAAD,CAASC,QAASjB,EAAMkB,W,6CCK1BC,G,OAAcC,YAAiB,KAC/BC,EAAWC,YAAQ,YAsCnBC,EAAsBC,YAAU,CAAEC,KAAM,yBAAlBD,EAbL,SAACxB,GACpB,OACI,0BAAM0B,SAAU1B,EAAM2B,aAAcC,UAAWC,IAAEC,gBAC7C,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWX,EAAUY,YAAY,qBAAqBnB,KAAK,iBAAiBoB,SAAU,CAACC,IAAUhB,MAE5G,6BACI,kBAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,UAA/B,aAQDC,EAtCC,SAACvC,GAEb,IAAIwC,EAAQxC,EAAMyC,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAiB/B,KAAM+B,EAAE/B,KAAMgC,IAAKD,EAAErC,GAAIA,GAAIqC,EAAErC,QAAQuC,UACjGC,EAAmBR,EAAMS,SAASL,KAAI,SAAAM,GAAC,OAAI,kBAAC,EAAD,CAAgBhC,QAASgC,EAAEhC,QAAS4B,IAAKI,EAAE1C,QAAQuC,UAMlG,OACI,yBAAKnB,UAAU,kBACX,yBAAKA,UAAWC,IAAEsB,cACbT,GAEL,yBAAKd,UAAWC,IAAEuB,UACd,6BAAMJ,IAEV,kBAACzB,EAAD,CAAqBG,SAZT,SAAC2B,GACjBrD,EAAMsD,YAAYD,EAAOE,qB,wDChB7BC,EAA6B,SAAChB,GAAD,MAAY,CACvCiB,OAAQjB,EAAMkB,KAAKD,S,QCgBVE,sBACXC,aAfkB,SAACpB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACoB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,UDPR,SAACQ,GAAe,IAEpCC,EAFmC,iLAI7B,OAAKC,KAAKjE,MAAMyD,OACT,kBAACM,EAAcE,KAAKjE,OADI,kBAAC,IAAD,CAAUO,GAAG,cAJf,GAET2D,IAAMH,WAUtC,OAHqCH,YAAQJ,EAARI,CAAoCI,KCGhEL,CAIVpB","file":"static/js/5.66fb945f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"Dialogs_form-container__R8u3X\",\"dialogsItems\":\"Dialogs_dialogsItems__3evk8\",\"active\":\"Dialogs_active__6IcBA\",\"massages\":\"Dialogs_massages__34mvE\",\"addMessageItem\":\"Dialogs_addMessageItem__22xn2\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { List, Image } from 'semantic-ui-react';\r\n\r\nconst DialogsUserItem = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <List selection verticalAlign='middle'>\r\n                <List.Item\r\n                    as={NavLink}\r\n                    to={'/dialogs/' + props.id}>\r\n                    <Image avatar src='https://react.semantic-ui.com/images/avatar/small/christian.jpg' />\r\n                    <List.Content>\r\n                        <List.Header>{props.name}</List.Header>\r\n                    </List.Content>\r\n                </List.Item>\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogsUserItem;","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nconst DialogsMessage = (props) => {\r\n    return (\r\n        <Message content={props.message} />\r\n    )\r\n};\r\n\r\nexport default DialogsMessage;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogsUserItem from './DialogsUserItem/DialogsUserItem';\r\nimport DialogsMessage from './Message/DialogsMessage';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators';\r\nimport { Element } from '../common/FormsControls/FormsControls';\r\nimport { Button } from 'semantic-ui-react';\r\nimport './../../App'\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst Textarea = Element('textarea');\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogsUserItem name={d.name} key={d.id} id={d.id} />).reverse();\r\n    let messagesElements = state.messages.map(m => <DialogsMessage message={m.message} key={m.id} />).reverse();\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.massages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.addMessageItem}>\r\n            <div>\r\n                <Field component={Textarea} placeholder=\"Ender your message\" name=\"newMessageBody\" validate={[required, maxLength50]} />\r\n            </div>\r\n            <div>\r\n                <Button variant=\"primary\" type=\"submit\">Send</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: 'dialogsAddMessageForm' })(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n      isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n      class RedirectComponent extends React.Component {\r\n            render() {\r\n                  if (!this.props.isAuth) return <Redirect to=\"login\" />\r\n                  return <Component {...this.props} />\r\n            }\r\n      }\r\n\r\n      let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n      return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)\r\n    (Dialogs);"],"sourceRoot":""}