{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/Users.module.css","assets/image/user-man.png","components/common/Paginator/Paginator.jsx","components/Users/User.js","components/Users/Users.js","redux/users-selector.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","className","styles","selectedPages","e","User","user","props","to","id","src","photos","small","userDefaultPhoto","alt","s","avatar","followed","Button","disabled","followingInProgress","some","unfollow","color","follow","name","status","Users","totalUsersCount","users","u","key","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","getUser","this","Preloader","React","Component","compose","connect","setCurrentPage","toggleFollowingProgress","requestUsers"],"mappings":"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","file":"static/js/4.4b39d08a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPages\":\"Paginator_selectedPages__2WlBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__26Oo7\",\"postsBlock\":\"Users_postsBlock__1ZtWP\"};","module.exports = __webpack_public_path__ + \"static/media/user-man.ce8e7ab8.png\";","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css'\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map((p) => {\r\n            return <span className={currentPage === p && styles.selectedPages}\r\n                onClick={(e) => { onPageChanged(p) }}>{p}</span>\r\n        })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>\r\n        }\r\n    </div >\r\n}\r\n\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userDefaultPhoto from '../../assets/image/user-man.png';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nlet User = ({ user, ...props }) => {\r\n    return <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userDefaultPhoto} alt={'avatar'} className={s.avatar} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <Button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => { props.unfollow(user.id) }}>\r\n                        Unfollow</Button>\r\n                    : <Button color='teal' disabled={props.followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => { props.follow(user.id) }}>\r\n                        Follow</Button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name} </div>\r\n                <div>{user.status || 'No status'}</div>\r\n            </span>\r\n            <span>\r\n                <div>{'u.location.country'}</div>\r\n                <div>{'u.location.city'}</div>\r\n            </span>\r\n        </span>\r\n    </div >\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\nimport { Pagination } from 'semantic-ui-react';\r\n\r\n\r\nlet Users = ({ currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props }) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize} />\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                    followingInProgress={props.followingInProgress}\r\n                    key={u.id}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n      return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n      return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n      return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n      return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n      return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n      return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers } from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from \"../../redux/users-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n      componentDidMount() {\r\n            this.props.getUser(this.props.currentPage, this.props.pageSize);\r\n      }\r\n\r\n      onPageChanged = (pageNumber) => {\r\n            this.props.getUser(pageNumber, this.props.pageSize);\r\n      };\r\n\r\n      render() {\r\n            return (\r\n                  <>\r\n                        {this.props.isFetching ? <Preloader /> : null}\r\n                        <Users totalUsersCount={this.props.totalUsersCount}\r\n                              pageSize={this.props.pageSize}\r\n                              currentPage={this.props.currentPage}\r\n                              selectedPages={this.props.selectedPages}\r\n                              onPageChanged={this.onPageChanged}\r\n                              users={this.props.users}\r\n                              follow={this.props.follow}\r\n                              unfollow={this.props.unfollow}\r\n                              followingInProgress={this.props.followingInProgress}\r\n                        />\r\n                  </>\r\n            );\r\n      }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n      return {\r\n            users: getUsers(state),\r\n            pageSize: getPageSize(state),\r\n            totalUsersCount: getTotalUsersCount(state),\r\n            currentPage: getCurrentPage(state),\r\n            isFetching: getIsFetching(state),\r\n            followingInProgress: getFollowingInProgress(state)\r\n      };\r\n};\r\n\r\nexport default compose(\r\n      connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUser: requestUsers })\r\n)(UsersContainer)"],"sourceRoot":""}